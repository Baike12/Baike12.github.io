[{"content":"包含两部分：\n建立索引 检索生成 1\t建立索引 1.1\t加载文档 1.2\t拆分文档 将分档拆分成小块有利于：\n建立索引 传递给模型 1.3\t存储文档 2\t一个简单例子 2.1\t文档处理 定义加载器 分割文档 将文档存入向量数据库 2.2\t状态定义 使用一个类定义状态，包含：\n问题 上下文 回答 这个状态也是在图中流转的单位 2.3\t函数定义 封装检索和模型调用\n2.4\t查询分析 可以对检索到的文档进行分析，之后在传入模型上下文，比如：\n限制检索到的内容年份 对查询进行重写 2.4.1\t流程 定义个查询分析类 定义状态类，其中包含查询分析类 定义查询分析函数：其中调用一次模型，让模型输出符合查询分析类的格式化查询，相当于重写一次查询，然后将 3\t处理历史消息 langgraph内置有多种消息：\n用户输入作为人类消息 工具调用作为ai消息 检索文档作为工具消息 最后的响应也作为ai消息 3.1\tcheckpoint langchain使用checkpoint来持久化状态state\n4\tagent langgraph内置了react agent框架，可以将tool调用的结果作为agent的输入，驱动下一个tool调用或者结束\n","permalink":"https://baike12.github.io/posts/rag/","summary":"\u003cp\u003e包含两部分：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e建立索引\u003c/li\u003e\n\u003cli\u003e检索生成\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"1建立索引\"\u003e1\t建立索引\u003c/h1\u003e\n\u003ch2 id=\"11加载文档\"\u003e1.1\t加载文档\u003c/h2\u003e\n\u003ch2 id=\"12拆分文档\"\u003e1.2\t拆分文档\u003c/h2\u003e\n\u003cp\u003e将分档拆分成小块有利于：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e建立索引\u003c/li\u003e\n\u003cli\u003e传递给模型\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"13存储文档\"\u003e1.3\t存储文档\u003c/h2\u003e\n\u003ch1 id=\"2一个简单例子\"\u003e2\t一个简单例子\u003c/h1\u003e\n\u003ch2 id=\"21文档处理\"\u003e2.1\t文档处理\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e定义加载器\u003c/li\u003e\n\u003cli\u003e分割文档\u003c/li\u003e\n\u003cli\u003e将文档存入向量数据库\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"22状态定义\"\u003e2.2\t状态定义\u003c/h2\u003e\n\u003cp\u003e使用一个类定义状态，包含：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e问题\u003c/li\u003e\n\u003cli\u003e上下文\u003c/li\u003e\n\u003cli\u003e回答\n这个状态也是在图中流转的单位\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"23函数定义\"\u003e2.3\t函数定义\u003c/h2\u003e\n\u003cp\u003e封装检索和模型调用\u003c/p\u003e\n\u003ch2 id=\"24查询分析\"\u003e2.4\t查询分析\u003c/h2\u003e\n\u003cp\u003e可以对检索到的文档进行分析，之后在传入模型上下文，比如：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e限制检索到的内容年份\u003c/li\u003e\n\u003cli\u003e对查询进行重写\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"241流程\"\u003e2.4.1\t流程\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e定义个查询分析类\u003c/li\u003e\n\u003cli\u003e定义状态类，其中包含查询分析类\u003c/li\u003e\n\u003cli\u003e定义查询分析函数：其中调用一次模型，让模型输出符合查询分析类的格式化查询，相当于重写一次查询，然后将\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"3处理历史消息\"\u003e3\t处理历史消息\u003c/h1\u003e\n\u003cp\u003elanggraph内置有多种消息：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e用户输入作为人类消息\u003c/li\u003e\n\u003cli\u003e工具调用作为ai消息\u003c/li\u003e\n\u003cli\u003e检索文档作为工具消息\u003c/li\u003e\n\u003cli\u003e最后的响应也作为ai消息\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"31checkpoint\"\u003e3.1\tcheckpoint\u003c/h2\u003e\n\u003cp\u003elangchain使用checkpoint来持久化状态state\u003c/p\u003e\n\u003ch1 id=\"4agent\"\u003e4\tagent\u003c/h1\u003e\n\u003cp\u003elanggraph内置了react agent框架，可以将tool调用的结果作为agent的输入，驱动下一个tool调用或者结束\u003c/p\u003e","title":"Rag"},{"content":"欢迎来到我的博客！ 这是我用 Hugo + GitHub Pages 搭建的第一篇博客！\n技术栈 静态网站生成器：Hugo 主题：PaperMod 部署平台：GitHub Pages 版本控制：Git 功能特性 1. 分类系统 博客支持按分类组织文章，比如：\nAI相关内容 Rust编程 其他技术话题 2. 标签系统 每篇文章可以添加多个标签，方便检索和分类。\n3. 图片支持 支持多种方式插入图片：\nMarkdown语法 ![描述文字](/images/example.jpg) Hugo shortcode 图片标题 下一步计划 添加更多AI相关文章 分享Rust学习心得 优化博客样式和功能 感谢访问我的博客！\n","permalink":"https://baike12.github.io/posts/hello-hugo/","summary":"\u003ch2 id=\"欢迎来到我的博客\"\u003e欢迎来到我的博客！\u003c/h2\u003e\n\u003cp\u003e这是我用 Hugo + GitHub Pages 搭建的第一篇博客！\u003c/p\u003e\n\u003ch2 id=\"技术栈\"\u003e技术栈\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e静态网站生成器\u003c/strong\u003e：Hugo\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e主题\u003c/strong\u003e：PaperMod\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e部署平台\u003c/strong\u003e：GitHub Pages\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e版本控制\u003c/strong\u003e：Git\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"功能特性\"\u003e功能特性\u003c/h2\u003e\n\u003ch3 id=\"1-分类系统\"\u003e1. 分类系统\u003c/h3\u003e\n\u003cp\u003e博客支持按分类组织文章，比如：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAI相关内容\u003c/li\u003e\n\u003cli\u003eRust编程\u003c/li\u003e\n\u003cli\u003e其他技术话题\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"2-标签系统\"\u003e2. 标签系统\u003c/h3\u003e\n\u003cp\u003e每篇文章可以添加多个标签，方便检索和分类。\u003c/p\u003e\n\u003ch3 id=\"3-图片支持\"\u003e3. 图片支持\u003c/h3\u003e\n\u003cp\u003e支持多种方式插入图片：\u003c/p\u003e\n\u003ch4 id=\"markdown语法\"\u003eMarkdown语法\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-markdown\" data-lang=\"markdown\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e![\u003cspan style=\"color:#f92672\"\u003e描述文字\u003c/span\u003e](\u003cspan style=\"color:#a6e22e\"\u003e/images/example.jpg\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"hugo-shortcode\"\u003eHugo shortcode\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-markdown\" data-lang=\"markdown\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cfigure\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/example.jpg\"/\u003e \u003cfigcaption\u003e\n            图片标题\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"下一步计划\"\u003e下一步计划\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cinput disabled=\"\" type=\"checkbox\"\u003e 添加更多AI相关文章\u003c/li\u003e\n\u003cli\u003e\u003cinput disabled=\"\" type=\"checkbox\"\u003e 分享Rust学习心得\u003c/li\u003e\n\u003cli\u003e\u003cinput disabled=\"\" type=\"checkbox\"\u003e 优化博客样式和功能\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e感谢访问我的博客！\u003c/p\u003e","title":"Hello Hugo"},{"content":"Rust简介 Rust是一种系统编程语言，专注于安全性、速度和并发性。\n核心特性 1. 内存安全 Rust通过所有权系统在编译时防止内存错误。\n2. 零成本抽象 高级特性不会带来运行时开销。\n3. 并发安全 类型系统防止数据竞争。\nHello World示例 fn main() { println!(\u0026#34;Hello, world!\u0026#34;); } 所有权系统 fn main() { let s1 = String::from(\u0026#34;hello\u0026#34;); let s2 = s1; // s1的所有权转移给s2 // println!(\u0026#34;{}\u0026#34;, s1); // 这会编译错误 println!(\u0026#34;{}\u0026#34;, s2); // 正确 } 图片插入方法 方法1：Markdown语法 ![Rust Logo](/images/rust-logo.png) 方法2：HTML标签 \u0026lt;img src=\u0026#34;/images/rust-logo.png\u0026#34; alt=\u0026#34;Rust Logo\u0026#34; width=\u0026#34;300\u0026#34;\u0026gt; 方法3：Hugo shortcode Rust编程语言 学习资源 The Rust Programming Language Rust by Example Rustlings 总结 Rust是一门现代的系统编程语言，值得深入学习。\n","permalink":"https://baike12.github.io/posts/rust-getting-started/","summary":"\u003ch2 id=\"rust简介\"\u003eRust简介\u003c/h2\u003e\n\u003cp\u003eRust是一种系统编程语言，专注于安全性、速度和并发性。\u003c/p\u003e\n\u003ch2 id=\"核心特性\"\u003e核心特性\u003c/h2\u003e\n\u003ch3 id=\"1-内存安全\"\u003e1. 内存安全\u003c/h3\u003e\n\u003cp\u003eRust通过所有权系统在编译时防止内存错误。\u003c/p\u003e\n\u003ch3 id=\"2-零成本抽象\"\u003e2. 零成本抽象\u003c/h3\u003e\n\u003cp\u003e高级特性不会带来运行时开销。\u003c/p\u003e\n\u003ch3 id=\"3-并发安全\"\u003e3. 并发安全\u003c/h3\u003e\n\u003cp\u003e类型系统防止数据竞争。\u003c/p\u003e\n\u003ch2 id=\"hello-world示例\"\u003eHello World示例\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-rust\" data-lang=\"rust\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efn\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003eprintln!\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hello, world!\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"所有权系统\"\u003e所有权系统\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-rust\" data-lang=\"rust\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efn\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003elet\u003c/span\u003e s1 \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e String::from(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;hello\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003elet\u003c/span\u003e s2 \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e s1; \u003cspan style=\"color:#75715e\"\u003e// s1的所有权转移给s2\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e// println!(\u0026#34;{}\u0026#34;, s1); // 这会编译错误\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#a6e22e\"\u003eprintln!\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e{}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e, s2); \u003cspan style=\"color:#75715e\"\u003e// 正确\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"图片插入方法\"\u003e图片插入方法\u003c/h2\u003e\n\u003ch3 id=\"方法1markdown语法\"\u003e方法1：Markdown语法\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-markdown\" data-lang=\"markdown\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e![\u003cspan style=\"color:#f92672\"\u003eRust Logo\u003c/span\u003e](\u003cspan style=\"color:#a6e22e\"\u003e/images/rust-logo.png\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"方法2html标签\"\u003e方法2：HTML标签\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-html\" data-lang=\"html\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026lt;\u003cspan style=\"color:#f92672\"\u003eimg\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esrc\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/images/rust-logo.png\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ealt\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Rust Logo\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ewidth\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;300\u0026#34;\u003c/span\u003e\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"方法3hugo-shortcode\"\u003e方法3：Hugo shortcode\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-markdown\" data-lang=\"markdown\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cfigure\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/rust-logo.png\" width=\"300\"/\u003e \u003cfigcaption\u003e\n            Rust编程语言\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"学习资源\"\u003e学习资源\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"https://doc.rust-lang.org/book/\"\u003eThe Rust Programming Language\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://doc.rust-lang.org/rust-by-example/\"\u003eRust by Example\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/rust-lang/rustlings\"\u003eRustlings\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"总结\"\u003e总结\u003c/h2\u003e\n\u003cp\u003eRust是一门现代的系统编程语言，值得深入学习。\u003c/p\u003e","title":"Rust编程语言入门"},{"content":"什么是人工智能 人工智能（Artificial Intelligence，AI）是计算机科学的一个分支，旨在创建能够执行通常需要人类智能的任务的系统。\n主要分支 1. 机器学习（Machine Learning） 机器学习是AI的一个子集，通过算法让计算机从数据中学习模式。\n2. 深度学习（Deep Learning） 深度学习使用神经网络来模拟人脑的工作方式。\n3. 自然语言处理（NLP） 让计算机理解和生成人类语言。\n学习路径 数学基础：线性代数、概率论、统计学 编程语言：Python、R 框架工具：TensorFlow、PyTorch 实践项目：从简单的分类问题开始 插入图片示例 如果你想插入图片，可以使用以下方式：\n![图片描述](/images/ai-diagram.png) 或者使用Hugo的figure shortcode：\nAI架构图 总结 人工智能是一个快速发展的领域，掌握基础概念和实践技能是关键。\n","permalink":"https://baike12.github.io/posts/ai-introduction/","summary":"\u003ch2 id=\"什么是人工智能\"\u003e什么是人工智能\u003c/h2\u003e\n\u003cp\u003e人工智能（Artificial Intelligence，AI）是计算机科学的一个分支，旨在创建能够执行通常需要人类智能的任务的系统。\u003c/p\u003e\n\u003ch2 id=\"主要分支\"\u003e主要分支\u003c/h2\u003e\n\u003ch3 id=\"1-机器学习machine-learning\"\u003e1. 机器学习（Machine Learning）\u003c/h3\u003e\n\u003cp\u003e机器学习是AI的一个子集，通过算法让计算机从数据中学习模式。\u003c/p\u003e\n\u003ch3 id=\"2-深度学习deep-learning\"\u003e2. 深度学习（Deep Learning）\u003c/h3\u003e\n\u003cp\u003e深度学习使用神经网络来模拟人脑的工作方式。\u003c/p\u003e\n\u003ch3 id=\"3-自然语言处理nlp\"\u003e3. 自然语言处理（NLP）\u003c/h3\u003e\n\u003cp\u003e让计算机理解和生成人类语言。\u003c/p\u003e\n\u003ch2 id=\"学习路径\"\u003e学习路径\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003e数学基础\u003c/strong\u003e：线性代数、概率论、统计学\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e编程语言\u003c/strong\u003e：Python、R\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e框架工具\u003c/strong\u003e：TensorFlow、PyTorch\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e实践项目\u003c/strong\u003e：从简单的分类问题开始\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"插入图片示例\"\u003e插入图片示例\u003c/h2\u003e\n\u003cp\u003e如果你想插入图片，可以使用以下方式：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-markdown\" data-lang=\"markdown\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e![\u003cspan style=\"color:#f92672\"\u003e图片描述\u003c/span\u003e](\u003cspan style=\"color:#a6e22e\"\u003e/images/ai-diagram.png\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e或者使用Hugo的figure shortcode：\u003c/p\u003e\n\u003cfigure\u003e\n    \u003cimg loading=\"lazy\" src=\"/images/ai-diagram.png\"/\u003e \u003cfigcaption\u003e\n            AI架构图\n        \u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003ch2 id=\"总结\"\u003e总结\u003c/h2\u003e\n\u003cp\u003e人工智能是一个快速发展的领域，掌握基础概念和实践技能是关键。\u003c/p\u003e","title":"人工智能入门指南"}]